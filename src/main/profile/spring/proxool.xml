<?xml version="1.0" encoding="UTF-8"?>
<proxools>
    <proxool>
        <!-- dbpool为读数据库链接，dbpool1为写入数据库链接 -->
        <!-- 这个连接池可以自动识别坏连接的，建议网络环境不稳定的情况下使用。本判断需要测试。 -->
        <alias>dbpool</alias>
        <driver-url>
            jdbc:mysql://localhost:3306/db?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false
        </driver-url>
        <driver-class>com.mysql.jdbc.Driver</driver-class>
        <driver-properties>
            <property name="user" value="mysql"/>
            <property name="password" value="mysql"/>
            <property name="autoReconnect" value="true"/>
            <!-- 需要注意一点，对于Mysql数据库还必须在连接参数里加上autoReconnect=true 参数，否则即使打开了test-before-use 参数，仍然不能重连接！ -->
        </driver-properties>
        <maximum-connection-count>350</maximum-connection-count>
        <!-- 允许最大连接数,超过了这个连接，再有请求时，就排在队列中等候，最大的等待请求数由maximum-new-connections决定 -->
        <minimum-connection-count>3</minimum-connection-count>
        <!-- 最小连接数 -->
        <house-keeping-test-sql>select 1 FROM DUAL</house-keeping-test-sql>
        <!-- 测试连接使用的sql -->
        <test-before-use>true</test-before-use>
        <!-- 每次使用连接前都首先测试一下 -->
        <house-keeping-sleep-time>30000</house-keeping-sleep-time>
        <!-- 配置为30秒， proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁。 -->
        <!-- 保留线程处于睡眠状态的最长时间,house keeper 的职责就是检查各个连接的状态,并判断是否需要销毁或者创建. -->
        <!-- How long the house keeping thread sleeps for (milliseconds). Defaults to
            30000 (30 seconds) -->

        <simultaneous-build-throttle>600</simultaneous-build-throttle><!-- 同时最大连接数 -->
        <!-- This is the maximum number of connections we can be building at any one time. That is,
            the number of new connections that have been requested but aren't yet available for use.(这个参数不可用)
            Defaults to 10. -->

        <maximum-active-time>300000</maximum-active-time>
        <!-- 配置了1小时，如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟. -->
        <!-- 一旦达到最大的连接数，只有这个指令才能够杀死连接线程。其单位为毫秒(ms). -->
        <!-- If the housekeeper comes across a thread that has been active for longer than this then it will kill it.
        So make sure you set this to a number bigger than your slowest expected response! Default is 5 minutes.
        -->
        <maximum-connection-lifetime>300000</maximum-connection-lifetime>
        <!-- 注意：这个参数暂时未实现。任何空闲连接超过5分钟，那么将被remove。Any idle connections older than this will be removed by the housekeeper (milliseconds).
            Defaults to 4 * 60 * 60 * 1000 (4 hours). -->
        <prototype-count>5</prototype-count>
        <!-- 最少保持的空闲连接数。如果少于这个连接数，那么新的连接将被建立。 -->
        <!-- If there are fewer than this number of connections available then we will build some more
            (assuming the maximum-connection-count is not exceeded). Defaults to zero. -->

        <recently-started-threshold>60000</recently-started-threshold>
        <!-- This helps us determine whether the pool status. As long as at least one connection was
            started within this threshold (milliseconds) or there are some spare connections available
            then we assume the pool is up. Defaults to 60 seconds. -->
        <overload-without-refusal-lifetime>60000</overload-without-refusal-lifetime>
        <!-- This helps us determine the pool status. If we have refused a connection within this threshold
            (milliseconds) then we are overloaded. Defaults to 60 seconds. -->

        <verbose>true</verbose>
        <!-- Either false (quiet) or true (loud). Default is false. 可以监控每个sql执行了多少毫秒。-->
        <trace>true</trace>
        <!-- If true then every execution will be logged. Default is false. -->
        <statistics>15m,1h,1d</statistics>
        <!-- 配置了这个参数，管理端才能够进行监控。The sample length when taking statistical information, comma-delimited. For example: '10s,15m'
            would mean take samples every 10 seconds and every 15 minutes. Valid units are s(econds),
            m(inutes), h(ours) and d(ays). Default is no statistics -->
        <statistics-log-level>INFO</statistics-log-level>
        <!-- Whether statistics are logged as they are produced. Range: DEBUG, INFO, WARN, ERROR, FATAL.
            Not to be confused with the level used with the general log. You have to configure that
            separately. Default is no logging -->
    </proxool>

    <!-- 济南环境 dbpool1 关键参数 -->
    <!-- url=jdbc:mysql://10.23.214.117:3306/mmsdb?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false -->
    <!-- user=ProgramUser -->
    <!-- password=ProgUser!@# -->
    <proxool>
        <!-- 这个连接池可以自动识别坏连接的，建议网络环境不稳定的情况下使用。本判断需要测试。 -->
        <alias>dbpool1</alias>
        <driver-url>
            jdbc:mysql://localhost:3306/mmsdb?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false
        </driver-url>
        <driver-class>com.mysql.jdbc.Driver</driver-class>
        <driver-properties>
            <property name="user" value="mysql"/>
            <property name="password" value="mysql"/>
            <property name="autoReconnect" value="true"/>
            <!-- 需要注意一点，对于Mysql数据库还必须在连接参数里加上autoReconnect=true 参数，否则即使打开了test-before-use 参数，仍然不能重连接！ -->
        </driver-properties>
        <maximum-connection-count>200</maximum-connection-count>
        <!-- 允许最大连接数,超过了这个连接，再有请求时，就排在队列中等候，最大的等待请求数由maximum-new-connections决定 -->
        <minimum-connection-count>3</minimum-connection-count>
        <!-- 最小连接数 -->
        <house-keeping-test-sql>select 1 FROM DUAL</house-keeping-test-sql>
        <!-- 测试连接使用的sql -->
        <test-before-use>true</test-before-use>
        <!-- 每次使用连接前都首先测试一下 -->
        <house-keeping-sleep-time>30000</house-keeping-sleep-time>
        <!-- 配置为30秒， proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁。 -->
        <!-- 保留线程处于睡眠状态的最长时间,house keeper 的职责就是检查各个连接的状态,并判断是否需要销毁或者创建. -->
        <!-- How long the house keeping thread sleeps for (milliseconds). Defaults to
            30000 (30 seconds) -->

        <simultaneous-build-throttle>400</simultaneous-build-throttle><!-- 同时最大连接数 -->
        <!-- This is the maximum number of connections we can be building at any one time. That is,
            the number of new connections that have been requested but aren't yet available for use.(这个参数不可用)
            Defaults to 10. -->

        <maximum-active-time>300000</maximum-active-time>
        <!-- 配置了1小时，如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟. -->
        <!-- 一旦达到最大的连接数，只有这个指令才能够杀死连接线程。其单位为毫秒(ms). -->
        <!-- If the housekeeper comes across a thread that has been active for longer than this then it will kill it.
        So make sure you set this to a number bigger than your slowest expected response! Default is 5 minutes.
        -->
        <maximum-connection-lifetime>300000</maximum-connection-lifetime>
        <!-- 注意：这个参数暂时未实现。任何空闲连接超过5分钟，那么将被remove。Any idle connections older than this will be removed by the housekeeper (milliseconds).
            Defaults to 4 * 60 * 60 * 1000 (4 hours). -->
        <prototype-count>5</prototype-count>
        <!-- 最少保持的空闲连接数。如果少于这个连接数，那么新的连接将被建立。 -->
        <!-- If there are fewer than this number of connections available then we will build some more
            (assuming the maximum-connection-count is not exceeded). Defaults to zero. -->

        <recently-started-threshold>60000</recently-started-threshold>
        <!-- This helps us determine whether the pool status. As long as at least one connection was
            started within this threshold (milliseconds) or there are some spare connections available
            then we assume the pool is up. Defaults to 60 seconds. -->
        <overload-without-refusal-lifetime>60000</overload-without-refusal-lifetime>
        <!-- This helps us determine the pool status. If we have refused a connection within this threshold
            (milliseconds) then we are overloaded. Defaults to 60 seconds. -->

        <verbose>true</verbose>
        <!-- Either false (quiet) or true (loud). Default is false. 可以监控每个sql执行了多少毫秒。-->
        <trace>true</trace>
        <!-- If true then every execution will be logged. Default is false. -->
        <statistics>15m,1h,1d</statistics>
        <!-- 配置了这个参数，管理端才能够进行监控。The sample length when taking statistical information, comma-delimited. For example: '10s,15m'
            would mean take samples every 10 seconds and every 15 minutes. Valid units are s(econds),
            m(inutes), h(ours) and d(ays). Default is no statistics -->
        <statistics-log-level>INFO</statistics-log-level>
        <!-- Whether statistics are logged as they are produced. Range: DEBUG, INFO, WARN, ERROR, FATAL.
            Not to be confused with the level used with the general log. You have to configure that
            separately. Default is no logging -->
    </proxool>
</proxools>
